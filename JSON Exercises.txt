1. On the click of the button displays the Date function.

<!DOCTYPE html>
<html>
<body>

<h2>My First JavaScript</h2>

<button type ="button" onClick = "document.getElementById('demo').innerHTML = Date()">
Click me to display Date and Time.</button>

<p id="demo"></p>

</body>
</html> 
--------------------------------------------------------------------------------------------

2. JSON's Document.Write - This is used to print the output.

<html>
<body>

<h2>Convert a JavaScript object into a JSON string, and send it to the server.</h2>
/*Output : Convert a JavaScript object into a JSON string, and send it to the server.*/

<script>

var myObj = { "name":"John", "age":31, "city":"New York" };
document.write(myObj);
/*Output : [object Object]*/

var myJSON = JSON.stringify(myObj);
document.write(myJSON);
/*Output : {"name":"John","age":31,"city":"New York"}*/

//window.location = "demo_json.php?x=" + myJSON;

</script>
</body>
</html>

-----------------------------------------------------------------------------------------

3.The script tag can hold the Javascript function.

Example
<script>
function myFunction() {
   document.getElementById("demo").innerHTML = "Paragraph changed.";
}
</script>

This script tag can appear inside the head, inside the body of an html doc.

- The script can also appear in a different (external) file.
  <script src="https://www.w3schools.com/js/myScript1.js"></script>
  And myScript1.js will have the function.
----------------------------------------------------------------------------------------

4. Accessing a Javascript Object

<!DOCTYPE html>
<html>
<body>

<p>Access a JavaScript object:</p>

<p id="demo"></p>

<script>

var myObj, x;
myObj = { "name":"John", "age":30, "city":"New York" };
x = myObj.name;
document.getElementById("demo").innerHTML = x;

</script>

</body>
</html>
----------------------------------------------------------------------------------------

5. Access a JavaScript object using the bracket notation.

<!DOCTYPE html>
<html>
<body>

<p>Access a JavaScript object using the bracket notation:</p>

<p id="demo"></p>

<script>

var myObj, x;
myObj = { "name":"John", "age":30, "city":"New York" };
x = myObj["name"];
document.getElementById("demo").innerHTML = x;

</script>

</body>
</html>

Output

Access a JavaScript object using the bracket notation
John
---------------------------------------------------------------------------------

6. Modify a Javascript Object

<!DOCTYPE html>
<html>
<body>

<p>Modify a JavaScript object:</p>

<p id="demo"></p>

<script>

var myObj, x;
myObj = { "name":"John", "age":30, "city":"New York" };
myObj.name = "Gilbert";
document.getElementById("demo").innerHTML = myObj.name;

</script>

</body>
</html>

Output 

Modify a JavaScript object.
Gilbert
------------------------------------------------------------------------------

7. Why JSON is better than XML?

XML is much more difficult to parse than JSON.

function myFunction(xml) {
  var x, i, xmlDoc, txt;
  xmlDoc = xml.responseXML;
  txt = "";
  x = xmlDoc.getElementsByTagName("ARTIST");     //Fetch an XML document
  for (i = 0; i< x.length; i++) {	         //Use the XML DOM to loop through the document
    txt += x[i].childNodes[0].nodeValue + "<br>";//Extract values and store in variables
  }

JSON is parsed into a ready-to-use JavaScript object.

Fetch a JSON string
JSON.Parse the JSON string
----------------------------------------------------------------------------------------------------

8. JSON Data Types

Fetch a single element from an array
<!DOCTYPE html>
<html>
<body>
<p>Access an array value of a JSON object.</p>
<p id="demo"></p>
<script>

var myObj, x;
myObj = {
    "name":"John",
    "age":30,
    "cars":[ "Ford", "BMW", "Fiat" ]
};
x = myObj.cars[0];

document.getElementById("demo").innerHTML = x;

</script>
</body>
</html>

Output - the output is printed when it calls <p id="demo"></p>

Access an array value of a JSON object.
Ford

document.getElementById("demo").innerHTML = y; will give Ford,BMW,Fiat
------------------------------------------------------------------------

8. If it had been the below program

<!DOCTYPE html>
<html>
<body>
<p>Access an array value of a JSON object.</p>
<p id="demo"></p>
<script>

var myObj, x="abc",y;
document.write(x);
myObj = {
    "name":"John",
    "age":30,
    "cars":[ "Ford", "BMW", "Fiat" ]
};
x = myObj.cars[0];
y = myObj.cars;
document.getElementById("demo").innerHTML = x;
document.getElementById("demo").innerHTML = y;
</script>
</body>
</html>

Output

Access an array value of a JSON object. 
Ford,BMW,Fiat 				//Here the first document.getElementById is not considered.MYU:It could be because 
					  'demo' is getting called twice.
abc					//This is because after the Ford is retrieved only, document.write(x); is called.
------------------------------------------------------------------------

9. How to loop through all properties in a JSON object.

<!DOCTYPE html>
<html>
<body>

<p>How to loop through all properties in a JSON object.</p>

<p id="demo"></p>

<script>
var myObj = { "name":"John", "age":30, "car":null };
for (x in myObj) {
    document.getElementById("demo").innerHTML += x + "<br>";
}
</script>

</body>
</html>

Output

How to loop through all properties in a JSON object.
name
age
car
---------------------------------------------------------------------

10. Use bracket notation to access the property values.

<!DOCTYPE html>
<html>
<body>

<p>Use bracket notation to access the property values.</p>

<p id="demo"></p>

<script>
var myObj = { "name":"John", "age":30, "car":null };
document.write(myObj.name);
for (x in myObj) {
    document.getElementById("demo").innerHTML += myObj[x] + "<br>";
}
</script>

Output

Use bracket notation to access the property values.

John
30
null
-----------------------------------------------------------------------

11. How to access nested JSON objects.

<!DOCTYPE html>
<html>
<body>

<p>How to access nested JSON objects.</p>

<p id="demo"></p>

<script>
var myObj = {
  "name":"John",
  "age":30,
  "cars": {
    "car1":"Ford",
    "car2":"BMW",
    "car3":"Fiat"
  }
}
document.getElementById("demo").innerHTML += myObj.cars.car2 + "<br>"; //accessing either using .car2 option
//or:
document.getElementById("demo").innerHTML += myObj.cars["car2"];       //accessing either using cars["car2"] option
</script>

</body>
</html>

Output

How to access nested JSON objects.
BMW
BMW
----------------------------------------------------------------------------------------------

12. How to modify values in a JSON object using the bracket notation.

<html>
<body>

<p>How to modify values in a JSON object using the bracket notation.</p>

<p id="demo"></p>
<p id="demo1"></p>

<script>
var myObj, i,x = "",y=""; /*If we don't initialize 'y', then it throws Undefined exception.*/
myObj = {
  "name":"John",
  "age":30,
  "cars": {
    "car1":"Ford",
    "car2":"BMW",
    "car3":"Fiat"
  }
}
myObj.cars["car2"] = "Mercedes"; //Setting the car2 object with new value 'Mercedes'

for (i in myObj) {
    x += i + "<br>";
}

document.getElementById("demo").innerHTML = x;

for (i in myObj.cars) {
    y += myObj.cars[i] + "<br>";
}

document.getElementById("demo1").innerHTML = y;

</script>

</body>
</html>

Output

How to modify values in a JSON object using the bracket notation.

name
age
cars

Ford
Mercedes
Fiat
----------------------------------------------------------------------------------------------

13. How to delete properties of a JSON object.

<!DOCTYPE html>
<html>
<body>

<p>How to delete properties of a JSON object.</p>

<p id="demo"></p>

<script>
var myObj, i, x = "";
myObj = {
  "name":"John",
  "age":30,
  "cars": {
    "car1":"Ford",
    "car2":"BMW",
    "car3":"Fiat"
  }
}
delete myObj.cars.car2;

for (i in myObj.cars) {
    x += myObj.cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = x;

</script>

</body>
</html>

Output

How to delete properties of a JSON object.

Ford
Fiat
-----------------------------------------------------------------------

14. Access an array value of a JSON object.

<!DOCTYPE html>
<html>
<body>

<p>Access an array value of a JSON object.</p>

<p id="demo"></p>

<script>

var myObj, x,i;
myObj = {
    "name":"John",
    "age":30,
    "cars":[ "Ford", "BMW", "Fiat" ]
};
for(i in myObj.cars)
{
  if(myObj.cars[i] == "Ford")
     x = myObj.cars[0];
  //document.write(i); // will result in array's index 0,1,2
  
  document.write(myObj.cars[i]);
}

document.getElementById("demo").innerHTML = x;

</script>

</body>
</html>

Output

Access an array value of a JSON object.
Ford
FordBMWFiat

Usage
for (i in myObj.cars) {
    x = myObj.cars[i] + "<br>";
}

Output
Fiat 
/*Value of car is iterated and the final value is set.*/

Usage
for (i in myObj.cars) {
    x += myObj.cars[i] + "<br>";
}

Output

Ford
BMW
Fiat
/*This happens because x=+ adds and then appended with <br>.*/

Usage
for (i = 0; i < myObj.cars.length; i++) {
    x += myObj.cars[i] + "<br>";
}

Output

Ford
BMW
Fiat
-------------------------------------------------------------------------------

15. Looping through arrays inside arrays.

<html>
<body>

<p>Looping through arrays inside arrays.</p>

<p id="demo"></p>

<script>

var myObj,i,j,x="";
myObj = {
    "name":"John",
    "age":30,
    "cars": [
        { "name":"Ford", "models":[ "Fiesta", "Focus", "Mustang" ] },
        { "name":"BMW", "models":[ "320", "X3", "X5" ] },
        { "name":"Fiat", "models":[ "500", "Panda" ] }
    ]
}

for(i in myObj.cars)
{
	x+= "<h2>"+ myObj.cars[i].name + "</h2>";
        for(j in myObj.cars[i].models) //Different variable to iterate 
				       //through models in cars
    	x += myObj.cars[i].models[j] + "<br>";
}

document.getElementById("demo").innerHTML = x;

</script>

</body>
</html>

Output

Looping through arrays inside arrays.
Ford /*This is in Bold*/
Fiesta
Focus
Mustang
BMW /*This is in Bold*/
320
X3
X5
Fiat /*This is in Bold*/
500
Panda
-----------------------------------------------------------------------------------

16. Iterating through the array using for loop start and end index

for (i = 0; i < myObj.cars.length; i++) {
    x += myObj.cars[i] + "<br>";
}

Output

Loopin through an array using a for loop:

Ford
BMW
Fiat
--------------------------------------------------------------------------

17. Create Object from JSON String

<!DOCTYPE html>
<html>
<body>

<h2>Create Object from JSON String</h2>

<p id="demo"></p>

<script>

var obj = JSON.parse('{ "name":"John", "age":30, "city":"New York"}');
document.getElementById("demo").innerHTML = obj.name + ", " + obj.age;

</script>

</body>
</html>

Output

Create Object from JSON String
John, 30
------------------------------------------------------------------------------------

18. Convert a string into a date object.

<html>
<body>

<h2>Convert a string into a date object.</h2>

<p id="demo"></p>

<script>

var text = '{ "name":"John", "birth":"1986-12-14", "city":"New York"}';
var obj = JSON.parse(text);
document.write(obj.name); //John
document.write(",<br>")
document.write(obj.birth); //Sun Dec 14 1986 11:00:00 GMT+1100 (AUS Eastern Daylight Time)
obj.birth = new Date(obj.birth);
document.getElementById("demo").innerHTML = obj.name  + ", " + "<br>" + obj.birth; 
</script>

</body>
</html>


Output

Convert a string into a date object.
John, 
Sun Dec 14 1986 11:00:00 GMT+1100 (AUS Eastern Daylight Time) 

John,
1986-12-14
-----------------------------------------------------------------------------------------------------------	

19. Convert a string into a date object.

<html>
<body>

<h2>Convert a string into a date object.</h2>

<p id="demo"></p>

<script>

var text = '{ "name":"John", "birth":"1986-12-14", "city":"New York"}';
var obj = JSON.parse(text, function(key,value){
/*Takes second argument for a reviver function that can transform the object values before they are returned.
MYU: Only the obj type can be returned, but it can be transformed.*/
		   if(key == "birth")
           {
           		return new Date(value); 
           }
           else 
           {
        		return value;
    	   }
		                              });
document.getElementById("demo").innerHTML = obj.name + ", " + "<br>" + obj.birth; 

</script>
</body>
</html>
---------------------------------------------------------------------------------------------------------------------

20. Convert a string into a function.
https://stackoverflow.com/questions/7399024/how-can-i-use-js-eval-to-return-a-value

<!DOCTYPE html>
<html>
<body>

<h2>Convert a string into a function.</h2>

<p id="demo"></p>

<script>


var text = '{ "name":"John", "age":"function() {return 30;}", "city":"New York"}';
var obj = JSON.parse(text);
//obj.age = eval(10*20);
obj.age = eval("(" + obj.age + ")")

document.getElementById("demo").innerHTML = obj.name + ", " + obj.age(); 

</script>

</body>
</html>

Output

Convert a string into a function.
John, 30

<!DOCTYPE html>
<html>
<body>

<h2>Convert a string into a function.</h2>

<p id="demo"></p>

<script>


var text = '{ "name":"John", "age":"function() {return 30;}", "city":"New York"}';
var obj = JSON.parse(text);
obj.age = eval(10*20);
//obj.age = eval("(" + obj.age + ")") 
/*https://stackoverflow.com/questions/7399024/how-can-i-use-js-eval-to-return-a-value*/
/*This is evaluating the function. 
*/

document.getElementById("demo").innerHTML = obj.name + ", " + obj.age; 

</script>

</body>
</html>

Output

Convert a string into a function.
John, 200
-------------------------------------------------------------------------------------------

21. Create JSON string from a JavaScript object.

<html>
<body>

<h2>Create JSON string from a JavaScript object.</h2>

<p id="demo"></p>

<script>

var obj = { "name":"John", "age":30, "city":"New York"};
var myJSON = JSON.stringify(obj);
document.getElementById("demo").innerHTML = myJSON;

</script>

</body>
</html>

Output

Create JSON string from a JavaScript object.
{"name":"John","age":30,"city":"New York"}
-----------------------------------------------------------------------------------------------
